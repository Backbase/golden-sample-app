/**
 * test - REST API
 * The REST API provide by the core REST module.
 *
 * The version of the OpenAPI document: Versioning not supported
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */
import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Node } from '../model/models';
import { CMSConfiguration } from '../configuration';
export interface EntityNodeGETRequestParams {
    /** Request format */
    ["format"]: 'hal_json' | 'json';
    /** The nid,id, of the node. */
    ["node"]: string;
}
export declare class NodeHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: CMSConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: CMSConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    /**
     * Get a Content
     * @param requestParameters
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/hal+json';
    }): Observable<Node>;
    entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/hal+json';
    }): Observable<HttpResponse<Node>>;
    entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/hal+json';
    }): Observable<HttpEvent<Node>>;
    entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Node>;
    entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Node>>;
    entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Node>>;
    entityNodeGETUrl(requestParameters: EntityNodeGETRequestParams): string;
}
