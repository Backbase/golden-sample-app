{"version":3,"file":"backbase-drupal-http-module-ang.js","sources":["../../../../model/inlineResponse400.ts","../../../../model/inlineResponse500.ts","../../../../model/file.ts","../../../../model/node.ts","../../../../model/nodeArticle.ts","../../../../model/nodeArticleSchema.ts","../../../../model/nodeArticleSchemaBody.ts","../../../../model/nodeArticleSchemaComment.ts","../../../../model/nodeImage.ts","../../../../model/nodeImageSchema.ts","../../../../model/nodeLangcode.ts","../../../../model/nodeNid.ts","../../../../model/nodePage.ts","../../../../model/nodePageSchema.ts","../../../../model/nodePath.ts","../../../../model/nodeRevisionLog.ts","../../../../model/nodeRevisionTimestamp.ts","../../../../model/nodeStatus.ts","../../../../model/nodeTitle.ts","../../../../model/nodeType.ts","../../../../model/nodeUuid.ts","../../../../model/taxonomyTerm.ts","../../../../model/user.ts","../../../../variables.ts","../../../../configuration.ts","../../../../api.module.ts","../../../../encoder.ts","../../../../api/node.service.ts","../../../../api/node.service.mocks.ts","../../../../backbase-drupal-http-module-ang.ts"],"sourcesContent":["/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface InlineResponse400 { \n    [\"error\"]?: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface InlineResponse500 { \n    [\"message\"]?: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The referenced entity\n */\nexport interface ModelFile { \n    [\"target_id\"]: number;\n    /**\n     * Alternative image text, for the image\\\\\\'s \\\\\\'alt\\\\\\' attribute.\n     */\n    [\"alt\"]?: string;\n    /**\n     * Image title text, for the image\\\\\\'s \\\\\\'title\\\\\\' attribute.\n     */\n    [\"title\"]?: string;\n    /**\n     * The width of the image in pixels.\n     */\n    [\"width\"]?: number;\n    /**\n     * The height of the image in pixels.\n     */\n    [\"height\"]?: number;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { NodeTitle } from './nodeTitle';\nimport { NodeLangcode } from './nodeLangcode';\nimport { User } from './user';\nimport { NodeRevisionLog } from './nodeRevisionLog';\nimport { NodeRevisionTimestamp } from './nodeRevisionTimestamp';\nimport { NodeUuid } from './nodeUuid';\nimport { NodeNid } from './nodeNid';\nimport { NodeType } from './nodeType';\nimport { NodePath } from './nodePath';\nimport { NodeStatus } from './nodeStatus';\n\n\n/**\n * Describes the payload for \\'node\\' entities.\n */\nexport interface Node { \n    [\"nid\"]: Array<NodeNid>;\n    [\"uuid\"]: Array<NodeUuid>;\n    [\"vid\"]: Array<NodeNid>;\n    [\"langcode\"]?: Array<NodeLangcode>;\n    [\"type\"]: Array<NodeType>;\n    /**\n     * The time that the current revision was created.\n     */\n    [\"revision_timestamp\"]?: Array<NodeRevisionTimestamp>;\n    /**\n     * The user ID of the author of the current revision.\n     */\n    [\"revision_uid\"]?: Array<User>;\n    /**\n     * Briefly describe the changes you have made.\n     */\n    [\"revision_log\"]?: Array<NodeRevisionLog>;\n    [\"status\"]?: Array<NodeStatus>;\n    /**\n     * The username of the content author.\n     */\n    [\"uid\"]?: Array<User>;\n    [\"title\"]: Array<NodeTitle>;\n    /**\n     * The time that the node was created.\n     */\n    [\"created\"]?: Array<NodeRevisionTimestamp>;\n    /**\n     * The time that the node was last edited.\n     */\n    [\"changed\"]?: Array<NodeRevisionTimestamp>;\n    [\"promote\"]?: Array<NodeStatus>;\n    [\"sticky\"]?: Array<NodeStatus>;\n    /**\n     * A flag indicating whether this is the default translation.\n     */\n    [\"default_langcode\"]?: Array<NodeStatus>;\n    /**\n     * A flag indicating whether this was a default revision when it was saved.\n     */\n    [\"revision_default\"]?: Array<NodeStatus>;\n    /**\n     * Indicates if the last edit of a translation belongs to current revision.\n     */\n    [\"revision_translation_affected\"]: Array<NodeStatus>;\n    [\"path\"]: Array<NodePath>;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { NodeTitle } from './nodeTitle';\nimport { NodeLangcode } from './nodeLangcode';\nimport { User } from './user';\nimport { NodeArticleSchemaComment } from './nodeArticleSchemaComment';\nimport { NodeRevisionTimestamp } from './nodeRevisionTimestamp';\nimport { Node } from './node';\nimport { NodeNid } from './nodeNid';\nimport { TaxonomyTerm } from './taxonomyTerm';\nimport { NodePath } from './nodePath';\nimport { NodeRevisionLog } from './nodeRevisionLog';\nimport { NodeArticleSchemaBody } from './nodeArticleSchemaBody';\nimport { NodeUuid } from './nodeUuid';\nimport { NodeType } from './nodeType';\nimport { NodeArticleSchema } from './nodeArticleSchema';\nimport { NodeStatus } from './nodeStatus';\n\n\nexport interface NodeArticle extends Node { \n    [\"body\"]?: Array<NodeArticleSchemaBody>;\n    [\"comment\"]?: Array<NodeArticleSchemaComment>;\n    [\"field_image\"]?: Array<any>;\n    /**\n     * Enter a comma-separated list. For example: Amsterdam, Mexico City, \\\\\\\"Cleveland, Ohio\\\\\\\"\n     */\n    [\"field_tags\"]?: Array<TaxonomyTerm>;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { NodeArticleSchemaBody } from './nodeArticleSchemaBody';\nimport { NodeArticleSchemaComment } from './nodeArticleSchemaComment';\nimport { TaxonomyTerm } from './taxonomyTerm';\n\n\n/**\n * Use articles for time-sensitive content like news, press releases or blog posts.\n */\nexport interface NodeArticleSchema { \n    [\"body\"]?: Array<NodeArticleSchemaBody>;\n    [\"comment\"]?: Array<NodeArticleSchemaComment>;\n    [\"field_image\"]?: Array<any>;\n    /**\n     * Enter a comma-separated list. For example: Amsterdam, Mexico City, \\\\\\\"Cleveland, Ohio\\\\\\\"\n     */\n    [\"field_tags\"]?: Array<TaxonomyTerm>;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeArticleSchemaBody { \n    [\"value\"]: string;\n    [\"format\"]?: string;\n    [\"summary\"]?: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeArticleSchemaComment { \n    [\"status\"]: number;\n    [\"cid\"]?: number;\n    /**\n     * The time that the last comment was created.\n     */\n    [\"last_comment_timestamp\"]?: number;\n    /**\n     * The name of the user posting the last comment.\n     */\n    [\"last_comment_name\"]?: string;\n    [\"last_comment_uid\"]?: number;\n    /**\n     * The number of comments.\n     */\n    [\"comment_count\"]?: number;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { NodeTitle } from './nodeTitle';\nimport { NodeImageSchema } from './nodeImageSchema';\nimport { NodeLangcode } from './nodeLangcode';\nimport { User } from './user';\nimport { NodeRevisionLog } from './nodeRevisionLog';\nimport { NodeRevisionTimestamp } from './nodeRevisionTimestamp';\nimport { NodeUuid } from './nodeUuid';\nimport { Node } from './node';\nimport { NodeNid } from './nodeNid';\nimport { NodeType } from './nodeType';\nimport { NodePath } from './nodePath';\nimport { NodeStatus } from './nodeStatus';\n\n\nexport interface NodeImage extends Node { \n    [\"title\"]: Array<NodeTitle>;\n    [\"field_image\"]?: Array<any>;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { NodeTitle } from './nodeTitle';\n\n\n/**\n * Describes the payload for \\'node\\' entities of the \\'image\\' bundle.\n */\nexport interface NodeImageSchema { \n    [\"title\"]: Array<NodeTitle>;\n    [\"field_image\"]?: Array<any>;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeLangcode { \n    [\"value\"]: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeNid { \n    [\"value\"]: number;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { NodeTitle } from './nodeTitle';\nimport { NodeLangcode } from './nodeLangcode';\nimport { User } from './user';\nimport { NodeRevisionTimestamp } from './nodeRevisionTimestamp';\nimport { Node } from './node';\nimport { NodeNid } from './nodeNid';\nimport { NodePageSchema } from './nodePageSchema';\nimport { NodePath } from './nodePath';\nimport { NodeRevisionLog } from './nodeRevisionLog';\nimport { NodeArticleSchemaBody } from './nodeArticleSchemaBody';\nimport { NodeUuid } from './nodeUuid';\nimport { NodeType } from './nodeType';\nimport { NodeStatus } from './nodeStatus';\n\n\nexport interface NodePage extends Node { \n    [\"promote\"]?: Array<NodeStatus>;\n    [\"body\"]?: Array<NodeArticleSchemaBody>;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { NodeArticleSchemaBody } from './nodeArticleSchemaBody';\nimport { NodeStatus } from './nodeStatus';\n\n\n/**\n * Use basic pages for your static content, such as an \\\\\\'About us\\\\\\' page.\n */\nexport interface NodePageSchema { \n    [\"promote\"]?: Array<NodeStatus>;\n    [\"body\"]?: Array<NodeArticleSchemaBody>;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodePath { \n    [\"alias\"]?: string;\n    [\"pid\"]?: number;\n    [\"langcode\"]?: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeRevisionLog { \n    [\"value\"]: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeRevisionTimestamp { \n    [\"value\"]: number;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeStatus { \n    [\"value\"]: boolean;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeTitle { \n    [\"value\"]: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeType { \n    [\"target_id\"]: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface NodeUuid { \n    [\"value\"]: string;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The referenced entity\n */\nexport interface TaxonomyTerm { \n    [\"target_id\"]: number;\n}\n\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The referenced entity\n */\nexport interface User { \n    [\"target_id\"]: number;\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport const CMS_BASE_PATH = new InjectionToken<string>('CMS_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface CMSConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class CMSConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: CMSConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n\n        // init default csrf_token credential\n        if (!this.credentials['csrf_token']) {\n            this.credentials['csrf_token'] = () => {\n                return this.apiKeys['csrf_token'] || this.apiKeys['X-CSRF-Token'];\n            };\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link CMSConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link CMSConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module CMSConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CMSConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class CMSApiModule {\n    public static forRoot(configurationFactory: () => CMSConfiguration): ModuleWithProviders<CMSApiModule> {\n        return {\n            ngModule: CMSApiModule,\n            providers: [ { provide: CMSConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: CMSApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: CMSConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('CMSApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * test - REST API\n * The REST API provide by the core REST module.\n *\n * The version of the OpenAPI document: Versioning not supported\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { InlineResponse400 } from '../model/models';\nimport { InlineResponse500 } from '../model/models';\nimport { Node } from '../model/models';\n\nimport { CMS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { CMSConfiguration }                                     from '../configuration';\n\n\nexport interface EntityNodeGETRequestParams {\n    /** Request format */\n    [\"format\"]: 'hal_json' | 'json';\n    /** The nid,id, of the node. */\n    [\"node\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NodeHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new CMSConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CMS_BASE_PATH) basePath: string, @Optional() configuration: CMSConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Get a Content\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/hal+json'}): Observable<Node>;\n    public entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/hal+json'}): Observable<HttpResponse<Node>>;\n    public entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/hal+json'}): Observable<HttpEvent<Node>>;\n    public entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Node>;\n    public entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Node>>;\n    public entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Node>>;\n    public entityNodeGET(requestParameters: EntityNodeGETRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/hal+json' | 'application/json'}): Observable<any> {\n        const _format = requestParameters[\"format\"];\n        if (_format === null || _format === undefined) {\n            throw new Error('Required parameter format was null or undefined when calling entityNodeGET.');\n        }\n        const _node = requestParameters[\"node\"];\n        if (_node === null || _node === undefined) {\n            throw new Error('Required parameter node was null or undefined when calling entityNodeGET.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_format !== undefined && _format !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_format, '_format');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (csrf_token) required\n        credential = this.configuration.lookupCredential('csrf_token');\n        if (credential) {\n            headers = headers.set('X-CSRF-Token', credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/hal+json',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Node>(`${this.configuration.basePath}/node/${encodeURIComponent(String(_node))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public entityNodeGETUrl(requestParameters: EntityNodeGETRequestParams): string {\n        const _format = requestParameters[\"format\"];\n        if (_format === null || _format === undefined) {\n            throw new Error('Required parameter format was null or undefined when calling entityNodeGET.');\n        }\n        const _node = requestParameters[\"node\"];\n        if (_node === null || _node === undefined) {\n            throw new Error('Required parameter node was null or undefined when calling entityNodeGET.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_format !== undefined && _format !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_format, '_format');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/node/${encodeURIComponent(String(_node))}${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /node/{node} URL pattern\n*/\nexport const NodeHttpServiceEntityNodeGETMocksProvider: Provider = createMocks([{\n        urlPattern: \"/node/{node}\",\n        method: \"GET\",\n        responses: [\n    ]\n}]);\n\nexport const NodeHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/node/{node}\",\n        method: \"GET\",\n        responses: [\n\n\n\n    ]\n},\n]\n);\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}