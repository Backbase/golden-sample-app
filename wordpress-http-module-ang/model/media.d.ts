/**
 * Wordpress v2 API
 * Wordpress v2 API
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */
export interface Media {
    /**
     * The date the object was published, in the site\'s timezone.
     */
    ["date"]?: string;
    /**
     * The date the object was published, as GMT.
     */
    ["date_gmt"]?: string;
    /**
     * The globally unique identifier for the object.
     */
    ["guid"]?: string;
    /**
     * Unique identifier for the object.
     */
    ["id"]?: number;
    /**
     * The date the object was last modified, in the site\'s timezone.
     */
    ["modified"]?: string;
    /**
     * The date the object was last modified, as GMT.
     */
    ["modified_gmt"]?: string;
    /**
     * The A password to protect access to the post.
     */
    ["password"]?: string;
    /**
     * An alphanumeric identifier for the object unique to its type.
     */
    ["slug"]?: string;
    /**
     * A named status for the object.
     */
    ["status"]?: Media.StatusEnum;
    /**
     * Type of Post for the object.
     */
    ["type"]?: string;
    /**
     * The title for the object.
     */
    ["title"]?: string;
    /**
     * The id for the author of the object.
     */
    ["author"]?: string;
    /**
     * Whether or not comments are open on the object
     */
    ["comment_status"]?: Media.CommentStatusEnum;
    /**
     * Whether or not the object can be pinged.
     */
    ["ping_status"]?: Media.PingStatusEnum;
    /**
     * Alternative text to display when resource is not displayed
     */
    ["alt_text"]?: string;
    /**
     * The caption for the resource.
     */
    ["caption"]?: string;
    /**
     * The description for the resource.
     */
    ["description"]?: string;
    /**
     * Type of resource.
     */
    ["media_type"]?: Media.MediaTypeEnum;
    /**
     * Mime type of resource.
     */
    ["mime_type"]?: string;
    /**
     * Details about the resource file, specific to its type.
     */
    ["media_details"]?: string;
    /**
     * The id for the associated post of the resource.
     */
    ["post"]?: string;
    /**
     * URL to the original resource file.
     */
    ["source_url"]?: string;
}
export declare namespace Media {
    type StatusEnum = 'publish' | 'future' | 'draft' | 'pending' | 'private';
    const StatusEnum: {
        Publish: import("./commonPostPage").CommonPostPage.StatusEnum;
        Future: import("./commonPostPage").CommonPostPage.StatusEnum;
        Draft: import("./commonPostPage").CommonPostPage.StatusEnum;
        Pending: import("./commonPostPage").CommonPostPage.StatusEnum;
        Private: import("./commonPostPage").CommonPostPage.StatusEnum;
    };
    type CommentStatusEnum = 'open' | 'closed';
    const CommentStatusEnum: {
        Open: import("./commonPostPage").CommonPostPage.CommentStatusEnum;
        Closed: import("./commonPostPage").CommonPostPage.CommentStatusEnum;
    };
    type PingStatusEnum = 'open' | 'closed';
    const PingStatusEnum: {
        Open: import("./commonPostPage").CommonPostPage.CommentStatusEnum;
        Closed: import("./commonPostPage").CommonPostPage.CommentStatusEnum;
    };
    type MediaTypeEnum = 'image' | 'file';
    const MediaTypeEnum: {
        Image: MediaTypeEnum;
        File: MediaTypeEnum;
    };
}
