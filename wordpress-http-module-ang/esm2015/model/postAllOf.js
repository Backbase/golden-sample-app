/**
 * Wordpress v2 API
 * Wordpress v2 API
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).
 * https://github.com/Backbase/backbase-openapi-tools
 * Do not edit the class manually.
 */
export var PostAllOf;
(function (PostAllOf) {
    PostAllOf.StatusEnum = {
        Publish: 'publish',
        Future: 'future',
        Draft: 'draft',
        Pending: 'pending',
        Private: 'private'
    };
    PostAllOf.CommentStatusEnum = {
        Open: 'open',
        Closed: 'closed'
    };
    PostAllOf.PingStatusEnum = {
        Open: 'open',
        Closed: 'closed'
    };
})(PostAllOf || (PostAllOf = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zdEFsbE9mLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90b21hc2NvcnJhbC9wcm9qZWN0cy9CYWNrYmFzZS9yZXBvcy9wYXltZW50LW9yZGVyLXByZXNlbnRhdGlvbi1zcGVjLWJhY2svdGFyZ2V0L2dlbmVyYXRlZC1zb3VyY2VzL29wZW5hcGkvIiwic291cmNlcyI6WyJtb2RlbC9wb3N0QWxsT2YudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7R0FVRztBQThFSCxNQUFNLEtBQVcsU0FBUyxDQW1CekI7QUFuQkQsV0FBaUIsU0FBUztJQUVULG9CQUFVLEdBQUc7UUFDdEIsT0FBTyxFQUFFLFNBQXVCO1FBQ2hDLE1BQU0sRUFBRSxRQUFzQjtRQUM5QixLQUFLLEVBQUUsT0FBcUI7UUFDNUIsT0FBTyxFQUFFLFNBQXVCO1FBQ2hDLE9BQU8sRUFBRSxTQUF1QjtLQUNuQyxDQUFDO0lBRVcsMkJBQWlCLEdBQUc7UUFDN0IsSUFBSSxFQUFFLE1BQTJCO1FBQ2pDLE1BQU0sRUFBRSxRQUE2QjtLQUN4QyxDQUFDO0lBRVcsd0JBQWMsR0FBRztRQUMxQixJQUFJLEVBQUUsTUFBd0I7UUFDOUIsTUFBTSxFQUFFLFFBQTBCO0tBQ3JDLENBQUM7QUFDTixDQUFDLEVBbkJnQixTQUFTLEtBQVQsU0FBUyxRQW1CekIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdvcmRwcmVzcyB2MiBBUElcbiAqIFdvcmRwcmVzcyB2MiBBUElcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMC4xLjBcbiAqIFxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vZ2l0aHViLmNvbS9CYWNrYmFzZS9iYWNrYmFzZS1vcGVuYXBpLXRvb2xzKS5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9CYWNrYmFzZS9iYWNrYmFzZS1vcGVuYXBpLXRvb2xzXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cblxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9zdEFsbE9mIHsgXG4gICAgLyoqXG4gICAgICogVGhlIGRhdGUgdGhlIG9iamVjdCB3YXMgcHVibGlzaGVkLCBpbiB0aGUgc2l0ZVxcJ3MgdGltZXpvbmUuXG4gICAgICovXG4gICAgW1wiZGF0ZVwiXT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgZGF0ZSB0aGUgb2JqZWN0IHdhcyBwdWJsaXNoZWQsIGFzIEdNVC5cbiAgICAgKi9cbiAgICBbXCJkYXRlX2dtdFwiXT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBvYmplY3QuXG4gICAgICovXG4gICAgW1wiZ3VpZFwiXT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9iamVjdC5cbiAgICAgKi9cbiAgICBbXCJpZFwiXT86IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBVUkwgdG8gdGhlIG9iamVjdC5cbiAgICAgKi9cbiAgICBbXCJsaW5rXCJdPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBkYXRlIHRoZSBvYmplY3Qgd2FzIGxhc3QgbW9kaWZpZWQsIGluIHRoZSBzaXRlXFwncyB0aW1lem9uZS5cbiAgICAgKi9cbiAgICBbXCJtb2RpZmllZFwiXT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgZGF0ZSB0aGUgb2JqZWN0IHdhcyBsYXN0IG1vZGlmaWVkLCBhcyBHTVQuXG4gICAgICovXG4gICAgW1wibW9kaWZpZWRfZ210XCJdPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBBIHBhc3N3b3JkIHRvIHByb3RlY3QgYWNjZXNzIHRvIHRoZSBwb3N0LlxuICAgICAqL1xuICAgIFtcInBhc3N3b3JkXCJdPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEFuIGFscGhhbnVtZXJpYyBpZGVudGlmaWVyIGZvciB0aGUgb2JqZWN0IHVuaXF1ZSB0byBpdHMgdHlwZS5cbiAgICAgKi9cbiAgICBbXCJzbHVnXCJdPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEEgbmFtZWQgc3RhdHVzIGZvciB0aGUgb2JqZWN0LlxuICAgICAqL1xuICAgIFtcInN0YXR1c1wiXT86IFBvc3RBbGxPZi5TdGF0dXNFbnVtO1xuICAgIC8qKlxuICAgICAqIFR5cGUgb2YgUG9zdCBmb3IgdGhlIG9iamVjdC5cbiAgICAgKi9cbiAgICBbXCJ0eXBlXCJdPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0aXRsZSBmb3IgdGhlIG9iamVjdC5cbiAgICAgKi9cbiAgICBbXCJ0aXRsZVwiXT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgY29udGVudCBmb3IgdGhlIG9iamVjdC5cbiAgICAgKi9cbiAgICBbXCJjb250ZW50XCJdPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBpZCBmb3IgdGhlIGF1dGhvciBvZiB0aGUgb2JqZWN0LlxuICAgICAqL1xuICAgIFtcImF1dGhvclwiXT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgZXhjZXJwdCBmb3IgdGhlIG9iamVjdFxuICAgICAqL1xuICAgIFtcImV4Y2VycHRcIl0/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGlkIG9mIHRoZSBmZWF0dXJlZCBtZWRpYSBmb3IgdGhlIG9iamVjdC5cbiAgICAgKi9cbiAgICBbXCJmZWF0dXJlZF9tZWRpYVwiXT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIG9yIG5vdCBjb21tZW50cyBhcmUgb3BlbiBvbiB0aGUgb2JqZWN0XG4gICAgICovXG4gICAgW1wiY29tbWVudF9zdGF0dXNcIl0/OiBQb3N0QWxsT2YuQ29tbWVudFN0YXR1c0VudW07XG4gICAgLyoqXG4gICAgICogV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBjYW4gYmUgcGluZ2VkLlxuICAgICAqL1xuICAgIFtcInBpbmdfc3RhdHVzXCJdPzogUG9zdEFsbE9mLlBpbmdTdGF0dXNFbnVtO1xufVxuZXhwb3J0IG5hbWVzcGFjZSBQb3N0QWxsT2Yge1xuICAgIGV4cG9ydCB0eXBlIFN0YXR1c0VudW0gPSAncHVibGlzaCcgfCAnZnV0dXJlJyB8ICdkcmFmdCcgfCAncGVuZGluZycgfCAncHJpdmF0ZSc7XG4gICAgZXhwb3J0IGNvbnN0IFN0YXR1c0VudW0gPSB7XG4gICAgICAgIFB1Ymxpc2g6ICdwdWJsaXNoJyBhcyBTdGF0dXNFbnVtLFxuICAgICAgICBGdXR1cmU6ICdmdXR1cmUnIGFzIFN0YXR1c0VudW0sXG4gICAgICAgIERyYWZ0OiAnZHJhZnQnIGFzIFN0YXR1c0VudW0sXG4gICAgICAgIFBlbmRpbmc6ICdwZW5kaW5nJyBhcyBTdGF0dXNFbnVtLFxuICAgICAgICBQcml2YXRlOiAncHJpdmF0ZScgYXMgU3RhdHVzRW51bVxuICAgIH07XG4gICAgZXhwb3J0IHR5cGUgQ29tbWVudFN0YXR1c0VudW0gPSAnb3BlbicgfCAnY2xvc2VkJztcbiAgICBleHBvcnQgY29uc3QgQ29tbWVudFN0YXR1c0VudW0gPSB7XG4gICAgICAgIE9wZW46ICdvcGVuJyBhcyBDb21tZW50U3RhdHVzRW51bSxcbiAgICAgICAgQ2xvc2VkOiAnY2xvc2VkJyBhcyBDb21tZW50U3RhdHVzRW51bVxuICAgIH07XG4gICAgZXhwb3J0IHR5cGUgUGluZ1N0YXR1c0VudW0gPSAnb3BlbicgfCAnY2xvc2VkJztcbiAgICBleHBvcnQgY29uc3QgUGluZ1N0YXR1c0VudW0gPSB7XG4gICAgICAgIE9wZW46ICdvcGVuJyBhcyBQaW5nU3RhdHVzRW51bSxcbiAgICAgICAgQ2xvc2VkOiAnY2xvc2VkJyBhcyBQaW5nU3RhdHVzRW51bVxuICAgIH07XG59XG5cblxuIl19