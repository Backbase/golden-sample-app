name: "Setup Node Environment"
description: >
  Set up node environment and install NPM dependencies.
  Node modules and Angular cache are cached, and installation is skipped if retrieved.
inputs:
  working-directory:
    description: >
      Path relative to the repository root, in which commands should be executed.
      Default value is `.` (root folder).
    required: false
    default: "."
  npm-auth-token:
    description: ""
    required: true

runs:
  using: "composite"
  steps:
    ##
    # Creates a cache of project's node_module and Angular's cache.
    # This cache will always be fetched while nothing changes in the lock file.
    ##
    - name: Cache node modules
      id: cache
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: |
          ${{ inputs.working-directory }}/node_modules
          ${{ inputs.working-directory }}/node_modules/.cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.working-directory)) }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: "npm"
        registry-url: "https://repo.backbase.com/api/npm/npm-backbase/"
        scope: "@backbase"
        cache-dependency-path: "**/package-lock.json"

    ##
    # Install NPM dependencies
    # Condition: only executed if cache not restored
    ##
    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci --force --ignore-scripts
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
