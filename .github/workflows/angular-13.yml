# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Pull Request Prerequisite Checks

on:
  pull_request:
    branches:
      - dev/angular13

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest]
        angular-version:
          - 13.0.x

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ github.base_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          registry-url: 'https://repo.backbase.com/artifactory/api/npm/npm-backbase/'
          scope: '@backbase'

      - name: Use Angular ${{ matrix.angular-version }}
        uses: ngworker/angular-versions-action@v4
        with:
          angular-version: ${{ matrix.angular-version }}

      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build app
        run: npm run affected:build

      - name: Check Formatting
        run: npm run format:check

      - name: Unit test
        run: npm run affected:test

      - name: Check Linting
        run: npm run affected:lint