# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Pull Request Prerequisite Checks

on:
  pull_request:
    branches:
      - main

jobs:
  get-playwright-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get Playwright version
        id: get-version
        run: |
          VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using Playwright version: $VERSION"

  build:
    runs-on: ubuntu-latest
    needs: get-playwright-version

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: ${{ github.base_ref }}

      - name: Setup Node.js
        uses: ./.github/actions/node-step
        with:
          npm-auth-token: ${{ secrets.NPM_TOKEN }}

      - name: Build app
        run: npm run affected:build

      - name: Check Formatting
        run: npm run format:check

      - name: Unit test
        run: npm run affected:test

      - name: Check Linting
        run: npm run affected:lint

  playwright:
    name: "Playwright Tests"
    runs-on: ubuntu-latest
    needs: get-playwright-version
    container:
      image: mcr.microsoft.com/playwright:v${{ needs.get-playwright-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: ./.github/actions/node-step
        with:
          npm-auth-token: ${{ secrets.NPM_TOKEN }}

      - name: Install browsers
        run: npx playwright install --with-deps chromium firefox webkit
        shell: bash

      - name: Run all Playwright tests
        run: |
          run_test() {
            local cmd="$1"
            local name="$2"
            if HOME=/root npm run "$cmd"; then
              echo "::notice::✅ $name passed"
            else
              echo "::error::❌ $name failed"
              exit 1
            fi
          }

          run_test "e2e-test-mocks" "E2E tests with mocks"
          run_test "e2e-test-responsive" "E2E Responsiveness tests"
          run_test "e2e-test-a11y" "E2E Accessibility tests"
          run_test "e2e-test-sndbx-ci" "E2E Sandbox tests"
        continue-on-error: true

      - name: Generate Allure Report
        run: HOME=/root npm run report-generate
        continue-on-error: true

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: reports/html-report/
          retention-days: 7

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: allure-report
          path: allure-report/
          retention-days: 7

      - name: Check Test Results
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "All tests passed"
          else
            echo "Some tests failed. Failing the job."
            exit 1
          fi
