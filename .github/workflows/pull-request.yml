# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Pull Request Prerequisite Checks

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout on main
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   

      - name: Checkout on dev/angular13
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: dev/angular13

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ github.base_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          registry-url: 'https://repo.backbase.com/artifactory/api/npm/npm-backbase/'
          scope: '@backbase'

      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v31
        with:
          files: |
            node_modules/@backbase/foundation-ang/**

      - name: Run step if any file(s) in the foundation ang folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the foundation ang folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
          npm i @angular/cli@13.0.0

      - name: Build app
        run: npm run affected:build

      - name: Check Formatting
        run: npm run format:check

      - name: Unit test
        run: npm run affected:test

      - name: Check Linting
        run: npm run affected:lint
